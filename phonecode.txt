//DIRECTIVES
#include<iostream>
#include<fstream>
#include<cstdlib>
#include<ctime>
#include <chrono>
#include<windows.h>
#include<string>
#include<iomanip>
#include <cctype>
#include<math.h>
using namespace std;

//FUNCTION DECLRATIONS AND DEFINITIONS
void menu();
void searchContact();


/*********************************************************************************MESSAGES******************************************************************************/
void messages() {
	int choice, i = 0;
	string message = "";
	int num[11] = {};
start:
	system("cls");
	cout << "1. WRITE A MESSAGE TO RANDOM NUMBER\n2. WRITE A MESSAGE TO A CONTACT\n.....Press 0 to exit to main menu\n";
	cin >> choice;
	switch (choice) {
	case 0: menu();
		break;
	case 1:
		cout << "ENTER AN 11 DIGIT NUMBER!\n";
		for (int i = 0; i < 12; i++) {
			num[i] = int(getchar());
		}
		cout << "\n\nEnter your message: ";

		cin >> message;
		cin.ignore();
		cout << "Sending Message...\n";
		for (int j = 0; j < 7; j++) {
			cout << "*";
			Sleep(500);
		}

		cout << "\n\nMessage sent successfully!\n\n";
		system("pause");
		goto start;
		break;

	case 2: searchContact();
		cout << "\n\nEnter your message: ";

		cin >> message;
		cin.ignore();
		cout << "Sending Message...\n";
		for (int j = 0; j < 7; j++) {
			cout << "*";
			Sleep(500);
		}

		cout << "\n\nMessage sent successfully!\n\n";
		system("pause");
		goto start;
		break;
	}

	
}

/**************************************************************************************CONTACTS***********************************************************************/
string fname, lname, phone_num;
void addContact();

bool check_digits(string);
bool check_numbers(string);



void addContact()
{
	ofstream phone("number.txt", ios::app);
	system("cls");
	cout << "\n\n\tEnter First Name : ";
	cin >> fname;
	cout << "\n\tEnter Last Name : ";
	cin >> lname;
	cout << "\n\tEnter Phone Number : ";
	cin >> phone_num;

	if (check_digits(phone_num) == true) {
		if (check_numbers(phone_num) == true) {
			if (phone.is_open()) {
				phone << fname << " " << lname << " "
					<< phone_num << endl;
				cout << "\n\tContact saved successfully !";
			}
			else {
				cout << "\n\tError in opening record!";
			}
		}
		else {
			cout << "\n\tOnly numbers are allowed!";
		}
	}
	else {
		cout << "\n\tPhone number should be of 11 digits "
			"only.";
	}
	cout << endl << endl;
	system("pause");
	system("cls");
	phone.close();
}

void searchContact()
{
	int choice = 0;
	bool found = false;
	ifstream myfile("number.txt");
	string keyword;
	cout << "\n\tEnter Name to search : ";
	cin >> keyword;
	while (myfile >> fname >> lname >> phone_num) {
		if (keyword == fname || keyword == lname) {
			system("cls");
			cout << "\n\n\n\t\tCONTACT DETAILS";
			cout << "\n\nFirst Name : " << fname;
			cout << "\nLast Name : " << lname;
			cout << "\nPhone Number : " << phone_num;
			found = true;
			break;
		}
	}
	if (found == false)
		cout << "\nNo such contact is found!";

	cout << endl << endl;
	system("pause");
	system("cls");
}

bool check_digits(string x)
{
	if (x.length() == 11)
		return true;
	else
		return false;
}

bool check_numbers(string x)
{
	bool check = true;

	for (int i = 0; i < x.length(); i++) {
		if (!(int(x[i]) >= 48 && int(x[i]) <= 57)) {
			check = false;
			break;
		}
	}

	if (check == true)
		return true;

	if (check == false)
		return false;

	cout << endl << endl;
	system("pause");
	system("cls");
}

void contacts()
{
	int choice;
	system("cls");
	system("color 0A");
	while (1) {
		cout << "t\t\tCONTACT BOOK";
		cout << "\n\n\t1. Add Contact\n\t2. Search Contact\n\t...Press 0 to return to main menu\n\t> ";
		cin >> choice;

		// Switch case
		switch (choice) {
		case 0: menu();
			break;
		case 1:
			addContact();
			break;

		case 2:
			searchContact();
			break;

		default:
			cout << "\n\n\tInvalid Input!";
		}
	}
}


/*********************************************************************************************DIALER*********************************************************************************************************/
void dialer() {
	int choice = 0;
	int num[11] = {};
start:
	system("cls");
	cout << "1. CALL A RANDOM NUMBER\n2. CALL A CONTACT\n....Press 0 to return to main menu\n";
	cin >> choice;
	switch (choice) {
	case 0: menu();
		break;
	case 1: cout << "ENTER AN 11 DIGIT NUMBER!\n";
		for (int i = 0; i < 12; i++) {
			num[i] = int(getchar());
		}

		cout << "Calling\n";
		for (int j = 0; j < 7; j++) {
			cout << "*";
			Sleep(500);
		}

		cout << "\n\nLine busy! Please Call back later!\n\n";
		system("pause");
		goto start;

		break;

	case 2: searchContact();

		cout << "Calling\n";
		for (int j = 0; j < 7; j++) {
			cout << "*";
			Sleep(500);
		}

		cout << "\n\nLine busy! Please Call back later!\n\n";
		system("pause");
		goto start;
		break;
	}

	
}


/*******************************************************************************************CALCULATOR************************************************************************************************/
void calculator()
{
	system("cls");
	cout << "\n\nARITHMETIC CALCULATOR!\n\n";
	cout << "*************KEY************\n + (Addition)\n - (Subtarction)\n * (Multiplication)\n \\ (Division)\n ^ (Power)\n s (Square Root).....For Example to calculate Square root of 4 type 4s\n\n";
	cout << "Type in the operation you wish to perform (e.g. 2+2)\n";
	char a;
	double num1 = 0.0, num2 = 0.0;
	cin >> num1;
	cin >> a;
	switch (a)
	{
	case '+': //adds num1 and num2 
		cin >> num2;
		cout << num1 + num2;
		break;
	case '-': //subtracts num2 and num1
		cin >> num2;
		cout << num1 - num2;
		break;
	case '*': //multiplies num1 and num2
		cin >> num2;
		cout << num1 * num2;
		break;
	case '/': //divides num1 by num1
		cin >> num2;
		cout << num1 / num2;
		break;
	case 's': //takes sqaure root of num1
		cout << sqrt(num1);
		break;
	case '^': //makes num1 the base and num2 an exponent
		cin >> num2;
		cout << pow(num1, num2);
	}

	cout << endl << endl;
	system("pause");
	menu();
}

/*********************************************************************************CALENDAR**********************************************************************************************************/
int weekday(int year) {
	int d;
	d = (((year - 1) * 365) + ((year - 1) / 4) - ((year - 1) / 100) + ((year) / 400) + 1) % 7;
	return d;
}

void calendar() {
	system("cls");
	cout << "\t     CALENDAR 2021\n\n";
	int year = 2021, month, day, days_Month, week = 0, startingDay;

	string months[] = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }; //stores months
	int monthDay[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }; //stores the number of total days in each month.

	if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
		monthDay[1] = 29;

	startingDay = weekday(year); //function called. the current value in variable year will be passed as a parameter. The function shall do some calculations and then return the value of d which will be stored in the variable startingDay

	for (month = 0; month < 12; month++) { //for loop. iterates 12 times since there are twelve month in a year. It displays the days of each month during each iteration.

		days_Month = monthDay[month];
		cout << "\n\n---------------" << months[month] << "-------------------\n";
		cout << "\n  Sun  Mon  Tue  Wed  Thurs  Fri  Sat\n";

		for (week = 0; week < startingDay; week++)
			cout << "     ";

		for (day = 1; day <= days_Month; day++) {
			cout << setw(5) << day;

			if (++week > 6) {
				cout << "\n";
				week = 0;
			}
			startingDay = week;
		}
	}

	cout << "\n\n";
	system("pause");
	menu();
}



/********************************************************************************************HANGMAN***********************************************************************************/
int tries = 3;
int check(char, string, string&);
void main_menu();
string message = "PLAY!";

void hangman() {
	string name;
	string hint;
	char letter = ' ';
	string word;

	string words[] = { "chair", "bread", "water", "china", "venus", "mouse", "train", "video", "pizza", "glass" };

	srand(time(0));
	int n = rand() % 10;
	word = words[n - 1];

	switch (n) {
	case 1: hint = "It is something we can sit on.";
		break;
	case 2: hint = "It is a staple food.";
		break;
	case 3: hint = "It is a chemical compound we consume everyday.";
		break;
	case 4: hint = "It is the most populated country in this world.";
		break;
	case 5: hint = "It is the hottest planet in Solar System.";
		break;
	case 6: hint = "It is a rodent.";
		break;
	case 7: hint = "It is a means of transport.";
		break;
	case 8: hint = "It is a series of images displayed one after the other.";
		break;
	case 9: hint = "It is a famous dish originating in Italy";
		break;
	case 10: hint = "It is a brittle material that is made from heated sand";
		break;
	}

	string hidden_word(word.length(), 'X');

	while (tries != 0)
	{
		main_menu();
		cout << "\nHINT: " << hint;
		cout << "\n\n\t\t\t\t" << hidden_word;
		cout << "\n\n\t\t\t\tGuess a letter: ";
		cin >> letter;

		if (check(letter, word, hidden_word) == 0)
		{
			message = "Incorrect! :(";
			tries = tries - 1;
		}
		else
		{
			message = "Correct! :)";
		}



		if (word == hidden_word)
		{
			message = "Congratulations! You got it!";
			main_menu();
			cout << "\n\t\t\t\tThe word is : " << word << "\n";
			break;
		}
	}
	if (tries == 0)
	{
		message = "NOOOOOOO!...you've been hanged.\n+-----+\n  |   |\n  O   |\n /|\\  |\n / \\  |\n      |\n=========\n";
		main_menu();
		cout << "\n\t\t\t\tThe word was : " << word << "\n";
	}
	cin.ignore();
	cin.get();

	cout << endl << endl;
	system("pause");
	menu();


}

int check(char guess, string secretword, string& guessword)
{
	int i;
	int matches = 0;
	int len = secretword.length();
	for (i = 0; i < len; i++)
	{

		if (guess == guessword[i])
			return 0;

		if (guess == secretword[i])
		{
			guessword[i] = guess;
			matches++;
		}
	}
	return matches;
}

void main_menu() {
	system("color 05");
	system("cls");
	cout << "\t\t\t\t*\t*";

	cout << "\t\t\t\t**\t**";
	cout << "\t\t\t\t***\t***";
	cout << "\t\t\t\t****\t****";
	cout << "\t\t\t\t*****\t*****";
	cout << "\t\t\t\t******\t******";
	cout << "\t\t\t\t*******\t*******";
	cout << "\t\t\t\t*******\t*******";
	cout << "\t\t\t\t******\t******";
	cout << "\t\t\t\t*****\t*****";
	cout << "\t\t\t\t****\t****";
	cout << "\t\t\t\t***\t***";
	cout << "\t\t\t\t**\t**";
	cout << "\t\t\t\t*\t*";

	cout << "\t\t@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
	cout << "\n\t\t\t\tHangman Game!";
	cout << "\n\t\tYou have " << tries << " tries to try and guess the word.";
	cout << "\n\n\t\t\t\t" + message;
	cout << "\n\t\t@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
}


/******************************************************************************************TIC TAC TOE******************************************************************************/
char square[10] = { 'o', '1', '2', '3', '4', '5', '6', '7', '8', '9' };

int checkwin();
void board();

void tictactoe()
{

	int player = 1, i = 0, choice = 0;

	char mark;
	do
	{
		board();
		player = (player % 2) ? 1 : 2;

		cout << "Player " << player << ", enter a number: ";
		cin >> choice;

		mark = (player == 1) ? 'X' : 'O';

		if (choice == 1 && square[1] == '1')
			square[1] = mark;

		else if (choice == 2 && square[2] == '2')
			square[2] = mark;

		else if (choice == 3 && square[3] == '3')
			square[3] = mark;

		else if (choice == 4 && square[4] == '4')
			square[4] = mark;

		else if (choice == 5 && square[5] == '5')
			square[5] = mark;

		else if (choice == 6 && square[6] == '6')
			square[6] = mark;

		else if (choice == 7 && square[7] == '7')
			square[7] = mark;

		else if (choice == 8 && square[8] == '8')
			square[8] = mark;

		else if (choice == 9 && square[9] == '9')
			square[9] = mark;

		else
		{
			cout << "Invalid move";

			player--;

		}
		i = checkwin();

		player++;
	} while (i == -1);

	board();

	if (i == 1)
		cout << "==>\a Player " << --player << " Wins!\n";
	else
		cout << "==>\a Game Tied!\n";

	cout << endl << endl;
	system("pause");
	menu();
}

int checkwin()
{
	if (square[1] == square[2] && square[2] == square[3])
		return 1;

	else if (square[4] == square[5] && square[5] == square[6])
		return 1;

	else if (square[7] == square[8] && square[8] == square[9])
		return 1;

	else if (square[1] == square[4] && square[4] == square[7])
		return 1;

	else if (square[2] == square[5] && square[5] == square[8])
		return 1;

	else if (square[3] == square[6] && square[6] == square[9])
		return 1;

	else if (square[1] == square[5] && square[5] == square[9])
		return 1;

	else if (square[3] == square[5] && square[5] == square[7])
		return 1;

	else if (square[1] != '1' && square[2] != '2' && square[3] != '3' &&
		square[4] != '4' && square[5] != '5' && square[6] != '6' && square[7]
		!= '7' && square[8] != '8' && square[9] != '9')

		return 0;
	else
		return  -1;
}


void board()
{
	system("cls");
	system("color 03");
	cout << "\tTic Tac Toe\n\n";

	cout << "Player 1 (X)  -  Player 2 (O)\n\n\n";


	cout << "    |   |     \n";
	cout << "  " << square[1] << " | " << square[2] << " | " << square[3] << "\n";

	//printf("_||__\n");
	cout << "    |   |     \n";

	cout << "  " << square[4] << " | " << square[5] << " | " << square[6] << "\n";

	// printf("_||__\n");
	cout << "    |   |     \n";

	cout << "  " << square[7] << " | " << square[8] << " | " << square[9] << "\n";

	cout << "    |   |     \n\n";
}

/******************************************************************NUMBER GUESSING GAME*************************************************************************/
void numberguessinggame() {

	system("color 02");
	system("cls");
	cout << "HELLO! WELCOME TO THIS NUMBER GUESSING GAME!\n";
	int number, i = 0, guess = 0, nguesses1 = 1, nguesses2 = 1;
	string player1, player2;
	srand(time(0));
	number = rand() % (100 + 1);

	cout << "Enter Player 1's name: ";
	cin >> player1;
	cout << "Enter Player 2's name: ";
	cin >> player2;
	cout << "\n\n";
	cout << player1 << "'s turn: \n";
	while (guess != number) {

		cout << "Guess the number between 1 to 100\n";
		cin >> guess;
		if (guess > number) {
			cout << "Lower Number please!\n\n";
			nguesses1++;
		}
		else if (guess < number) {
			cout << "Higher Number please!\n\n";
			nguesses1++;
		}
		else {
			cout << "\nTADA! You got it!\n" << player1 << " guessed it in " << nguesses1 << " attempts\n\n";
		}
	}

	cout << player2 << "'s turn: \n";
	srand(time(0));
	number = rand() % 100 + 1;
	do {

		cout << "Guess the number between 1 to 100\n";
		cin >> guess;
		if (guess > number) {
			cout << "Lower Number please!\n\n";
			nguesses2++;
		}
		else if (guess < number) {
			cout << "Higher Number please!\n\n";
			nguesses2++;
		}
		else {
			cout << "\nTADA! You got it!\n" << player2 << " guessed it in " << nguesses2 << " attempts\n\n";
		}

	} while (guess != number);
	if (nguesses1 > nguesses2) {
		cout << player2 << " WINS!\n" << player1 << "'s attempts: " << nguesses1 << "\n" << player2 << "'s attempts: " << nguesses2 << "\n";
	}
	else if (nguesses1 == nguesses2) {
		cout << "ITS A TIE!\n" << player1 << "'s attempts: " << nguesses1 << "\n" << player2 << "'s attempts: " << nguesses2 << "\n";
	}
	else {
		cout << player1 << " WINS!\n" << player1 << "'s attempts: " << nguesses1 << "\n" << player2 << "'s attempts: " << nguesses2 << "\n";
	}

	cout << endl << endl;
	system("pause");
	menu();

}

void menu() {
	system("cls");
	int app = 0, game = 0;
	system("color 09");
	cout << "***************MAIN MENU***************\n";
start1:
	cout << " 1. Messages     2. Contacts     3. Dialer\n";
	cout << " 4. Calculator   5. Calendar     6. Games\n";
	cout << " \n\n\n...Press 0 to close\n\n";
	cout << "\n\nEnter the S.No of the Application you want to use: ";
	cin >> app;
	switch (app) {
	case 0: cout << "\n\nTHNAKYOU FOR USING FLEXPAD 1.0 :)\n\n";
		break;
	case 1: messages();
		break;
	case 2: contacts();
		break;
	case 3: dialer();
		break;
	case 4: calculator();
		break;
	case 5: calendar();
		break;
	case 6: system("cls");
		cout << "**************GAMES HUB*************\n";
	start2:
		cout << "1. Hangman     2. Tic Tac Toe     3. Number Guessing Game\n";
		cout << "\nEnter the S.No of the Game you want to play: ";
		cin >> game;
		switch (game) {
		case 1: hangman();
			break;
		case 2: tictactoe();
			break;
		case 3: numberguessinggame();
			break;
		default: cout << "Invalid Input!\n";
			goto start2;
			break;
		}
	default: cout << "Invalid Input!\n";
		goto start1;
		break;
	}
}

int main() {
	system("color 09");
	int app = 0, game = 0;
	cout << "**********WELCOME TO FLEXPAD 1.0**********\n";
	cout << "A Project by Hassan Saqib, Asad Ahmed and Muhammad Saad from BEE-12D\n\n\n";
	cout << "Loading...\n";
	for (int i = 0; i <= 10; i++) {
		cout << "*";
		Sleep(500);
	}
	system("cls");
	menu();

	return 0;
}



